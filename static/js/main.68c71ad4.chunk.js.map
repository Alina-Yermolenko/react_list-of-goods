{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","getReorderedGoods","goods","visibleGoods","sort","a","b","localeCompare","length","reverse","sortAlphabetically","setState","ALPHABET","sortLength","LENGTH","reset","reorderedGoods","this","className","type","onClick","JSON","stringify","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wFAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAiBE,IAAME,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,kBAAoB,SAClBC,EADkB,GAGd,IADFH,EACC,EADDA,SAAUD,EACT,EADSA,WAENK,EAAY,YAAOD,GAkBzB,OAhBiB,IAAbH,GACFI,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAEE,cAAcD,MAIV,IAAbP,GACFI,EAAaC,MAAK,SAACC,EAAGC,GACpB,OAAOD,EAAEG,OAASF,EAAEE,UAIpBV,GACFK,EAAaM,UAGRN,GA5BX,EA+BEO,mBAAqB,WACnB,EAAKC,SACH,CAAEZ,SAAUL,EAASkB,YAjC3B,EAqCEC,WAAa,WACX,EAAKF,SACH,CAAEZ,SAAUL,EAASoB,UAvC3B,EA2CEC,MAAQ,WACN,EAAKJ,SACH,CACEb,YAAY,EACZC,SAAUL,EAASM,QA/C3B,EAoDES,QAAU,WACR,EAAKE,UAAS,SAACd,GAAD,MAAY,CACxBC,YAAaD,EAAMC,gBAtDzB,4CA0DE,WACE,IAAMkB,EAAiBC,KAAKhB,kBAAkBN,EAAiBsB,KAAKpB,OAEpE,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAA4C,IAAxBD,KAAKpB,MAAME,SAAiB,WAAa,IACtEqB,QAASH,KAAKP,mBAHhB,iCAQA,wBACES,KAAK,SACLD,UAAS,4BAA+C,IAAxBD,KAAKpB,MAAME,SAAiB,WAAa,IACzEqB,QAASH,KAAKJ,WAHhB,4BAQA,wBACEM,KAAK,SACLD,UAAS,4BAAwBD,KAAKpB,MAAMC,WAA0B,GAAb,YACzDsB,QAASH,KAAKR,QAHhB,qBAQEY,KAAKC,UAAUN,KACTK,KAAKC,UAAU3B,GAEjB,wBACEwB,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKF,MAHhB,mBAOE,gCAIV,6BACE,6BAEIC,EAAeO,KAAI,SAACC,GAClB,OACE,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,iBA3G3B,GAAyBC,IAAMC,WChC/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.68c71ad4.chunk.js","sourcesContent":["/* eslint-disable @typescript-eslint/no-unused-vars */\nimport React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\n// DON'T save goods to the state\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  getReorderedGoods = (\n    goods: string[],\n    { sortType, isReversed }: ReorderOptions,\n  ) => {\n    const visibleGoods = [...goods];\n\n    if (sortType === 1) {\n      visibleGoods.sort((a, b) => {\n        return a.localeCompare(b);\n      });\n    }\n\n    if (sortType === 2) {\n      visibleGoods.sort((a, b) => {\n        return a.length - b.length;\n      });\n    }\n\n    if (isReversed) {\n      visibleGoods.reverse();\n    }\n\n    return visibleGoods;\n  };\n\n  sortAlphabetically = () => {\n    this.setState(\n      { sortType: SortType.ALPHABET },\n    );\n  };\n\n  sortLength = () => {\n    this.setState(\n      { sortType: SortType.LENGTH },\n    );\n  };\n\n  reset = () => {\n    this.setState(\n      {\n        isReversed: false,\n        sortType: SortType.NONE,\n      },\n    );\n  };\n\n  reverse = () => {\n    this.setState((state) => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const reorderedGoods = this.getReorderedGoods(goodsFromServer, this.state);\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${this.state.sortType !== 1 ? 'is-light' : ''}`}\n            onClick={this.sortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${this.state.sortType !== 2 ? 'is-light' : ''}`}\n            onClick={this.sortLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!this.state.isReversed ? 'is-light' : ''}`}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n          {\n            JSON.stringify(reorderedGoods)\n              !== JSON.stringify(goodsFromServer)\n              ? (\n                <button\n                  type=\"button\"\n                  className=\"button is-danger is-light\"\n                  onClick={this.reset}\n                >\n                  Reset\n                </button>\n              ) : <></>\n          }\n        </div>\n\n        <ul>\n          <ul>\n            {\n              reorderedGoods.map((good) => {\n                return (\n                  <li key={good} data-cy=\"Good\">{good}</li>\n                );\n              })\n            }\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}